{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type { AllClientEvents, Call, CallResponse, StreamVideoParticipant } from '@stream-io/video-client';\nimport { CallingState, StreamVideoClient } from '@stream-io/video-client';\n\nimport type {\n  CallOptions,\n  StreamCallPlugin,\n  SuccessResponse,\n  LoginOptions,\n  CameraEnabledResponse,\n  CallEvent,\n  CallState,\n  CallMember,\n  DynamicApiKeyResponse,\n  CurrentUserResponse,\n} from './definitions';\n\nexport class StreamCallWeb extends WebPlugin implements StreamCallPlugin {\n  private client?: StreamVideoClient;\n  private currentCall?: Call;\n  private callStateSubscription?: { unsubscribe: () => void };\n  private incomingCall?: CallResponse;\n  private outgoingCall?: string;\n  private magicDivId?: string;\n  private videoBindings: Map<string, () => void> = new Map();\n  private audioBindings: Map<string, () => void> = new Map();\n  private participantJoinedListener?: (event: { participant?: { sessionId: string } }) => void;\n  private participantLeftListener?: (event: { participant?: { sessionId: string } }) => void;\n  private participantResponses: Map<string, string> = new Map();\n  private callMembersExpected: Map<string, number> = new Map();\n  private currentUser?: { userId: string; name: string; imageURL?: string };\n  //  private currentActiveCallId?: string;\n\n  private setupCallRingListener() {\n    this.client?.off('call.ring', this.ringCallback);\n    this.client?.off('call.session_started', this.callSessionStartedCallback);\n\n    this.client?.on('call.ring', this.ringCallback);\n    this.client?.on('call.session_started', this.callSessionStartedCallback);\n  }\n\n  private setupCallEventListeners() {\n    // Clear previous listeners if any\n    this.client?.off('call.rejected', this.callRejectedCallback);\n    this.client?.off('call.accepted', this.callAcceptedCallback);\n    this.client?.off('call.missed', this.callMissedCallback);\n    // Register event listeners\n    this.client?.on('call.rejected', this.callRejectedCallback);\n    this.client?.on('call.accepted', this.callAcceptedCallback);\n    this.client?.on('call.missed', this.callMissedCallback);\n  }\n\n  private ringCallback = (event: AllClientEvents['call.ring']) => {\n    console.log('Call ringing', event, this.currentCall);\n    this.incomingCall = event.call;\n\n    // Extract caller information\n    let caller: CallMember | undefined;\n\n    if (event.call?.created_by) {\n      caller = {\n        userId: event.call.created_by.id,\n        name: event.call.created_by.name,\n        imageURL: event.call.created_by.image,\n        role: event.call.created_by.role,\n      };\n    }\n\n    // if (!this.currentCall) {\n    console.log('Creating new call', event.call.id);\n    this.currentCall = this.client?.call(event.call.type, event.call.id);\n    // this.currentActiveCallId = this.currentCall?.cid;\n    setTimeout(() => {\n      this.notifyListeners('callEvent', {\n        callId: event.call.id,\n        state: CallingState.RINGING,\n        caller,\n      });\n    }, 100);\n    // Clear previous responses when a new call starts\n    this.participantResponses.clear();\n    // }\n    if (this.currentCall) {\n      console.log('Call found', this.currentCall.id);\n      this.callStateSubscription = this.currentCall?.state.callingState$.subscribe((s) => {\n        console.log('Call state', s);\n        if (s === CallingState.JOINED) {\n          this.setupParticipantListener();\n          this.setupCallEventListeners();\n        } else if (s === CallingState.LEFT || s === CallingState.RECONNECTING_FAILED) {\n          this.cleanupCall();\n        }\n        if (this.outgoingCall && s === CallingState.RINGING) {\n          this.outgoingCall = undefined;\n        } else {\n          this.notifyListeners('callEvent', { callId: this.currentCall?.id, state: s });\n        }\n      });\n    }\n  };\n\n  private setupParticipantListener() {\n    // Subscribe to participant changes\n    this.incomingCall = undefined;\n    if (!this.currentCall) return;\n\n    this.participantJoinedListener = (event) => {\n      if (this.magicDivId && event.participant) {\n        const magicDiv = document.getElementById(this.magicDivId);\n        if (magicDiv && this.currentCall) {\n          this.setupParticipantVideo(this.currentCall, event.participant as StreamVideoParticipant, magicDiv);\n          this.setupParticipantAudio(this.currentCall, event.participant as StreamVideoParticipant, magicDiv);\n        }\n      }\n    };\n\n    this.participantLeftListener = (event) => {\n      if (this.magicDivId && event.participant) {\n        const videoId = `video-${event.participant.sessionId}`;\n        const audioId = `audio-${event.participant.sessionId}`;\n\n        // Remove video element\n        const videoEl = document.getElementById(videoId) as HTMLVideoElement;\n        if (videoEl) {\n          const unbindVideo = this.videoBindings.get(videoId);\n          if (unbindVideo) {\n            unbindVideo();\n            this.videoBindings.delete(videoId);\n          }\n          const tracks = videoEl.srcObject as MediaStream;\n          if (tracks) {\n            tracks.getTracks().forEach((track) => {\n              track.stop();\n            });\n          }\n          videoEl.srcObject = null;\n          videoEl.remove();\n        }\n\n        // Remove audio element\n        const audioEl = document.getElementById(audioId) as HTMLAudioElement;\n        if (audioEl) {\n          const unbindAudio = this.audioBindings.get(audioId);\n          if (unbindAudio) {\n            unbindAudio();\n            this.audioBindings.delete(audioId);\n          }\n          const tracks = audioEl.srcObject as MediaStream;\n          if (tracks) {\n            tracks.getTracks().forEach((track) => {\n              track.stop();\n            });\n          }\n          audioEl.srcObject = null;\n          audioEl.remove();\n        }\n      }\n\n      // Check if we're the only participant left in the call\n      if (this.currentCall?.state.session) {\n        // Get the remaining participants count (we need to subtract 1 as we haven't been removed from the list yet)\n        const remainingParticipants = this.currentCall.state.session.participants.length - 1;\n\n        // If we're the only one left, end the call\n        if (remainingParticipants <= 1) {\n          console.log(`We are left solo in a call. Ending. cID: ${this.currentCall.cid}`);\n\n          // End the call\n          this.currentCall.leave();\n\n          // Clean up resources\n          const callCid = this.currentCall.cid;\n\n          // Invalidate and remove timer\n          const callState = this.callStates?.get(callCid);\n          if (callState?.timer) {\n            clearInterval(callState.timer);\n          }\n\n          // Remove from callStates\n          this.callStates?.delete(callCid);\n\n          // Reset the current call\n          this.currentCall = undefined;\n          // this.currentActiveCallId = undefined;\n\n          // Clean up\n          this.cleanupCall();\n\n          console.log(`Cleaned up resources for ended call: ${callCid}`);\n\n          // Notify that the call has ended\n          this.notifyListeners('callEvent', {\n            callId: callCid,\n            state: 'left',\n            reason: 'participant_left',\n          });\n        }\n      }\n    };\n\n    this.currentCall.on('participantJoined', this.participantJoinedListener);\n    this.currentCall.on('participantLeft', this.participantLeftListener);\n\n    // Setup initial participants\n    const participants = this.currentCall.state.participants;\n    if (this.magicDivId) {\n      const magicDiv = document.getElementById(this.magicDivId);\n      if (magicDiv) {\n        participants.forEach((participant: StreamVideoParticipant) => {\n          if (this.currentCall) {\n            this.setupParticipantVideo(this.currentCall, participant, magicDiv);\n            this.setupParticipantAudio(this.currentCall, participant, magicDiv);\n          }\n        });\n      }\n    }\n  }\n\n  private setupParticipantVideo(call: Call, participant: StreamVideoParticipant, container: HTMLElement) {\n    const id = `video-${participant.sessionId}`;\n    if (!document.getElementById(id)) {\n      const videoEl = document.createElement('video');\n      videoEl.id = id;\n      videoEl.style.width = '100%';\n      videoEl.style.maxWidth = '300px';\n      videoEl.style.aspectRatio = '16/9';\n      container.appendChild(videoEl);\n\n      const unbind = call.bindVideoElement(videoEl, participant.sessionId, 'videoTrack');\n      if (unbind) this.videoBindings.set(id, unbind);\n    }\n  }\n\n  private setupParticipantAudio(call: Call, participant: StreamVideoParticipant, container: HTMLElement) {\n    if (participant.isLocalParticipant) return;\n\n    const id = `audio-${participant.sessionId}`;\n    if (!document.getElementById(id)) {\n      const audioEl = document.createElement('audio');\n      audioEl.id = id;\n      container.appendChild(audioEl);\n\n      const unbind = call.bindAudioElement(audioEl, participant.sessionId);\n      if (unbind) this.audioBindings.set(id, unbind);\n    }\n  }\n\n  private callSessionStartedCallback = (event: AllClientEvents['call.session_started']) => {\n    console.log('Call created (session started)', event);\n    if (event.call?.session?.participants) {\n      // Store the number of expected participants for this call\n      const callCid = event.call.cid;\n      const memberCount = event.call.session.participants.length;\n      console.log(`Call ${callCid} created with ${memberCount} members`);\n      this.callMembersExpected.set(callCid, memberCount);\n\n      // Store call members in callStates\n      this.callStates.set(callCid, {\n        members: event.call.session.participants.map((p) => ({ user_id: p.user?.id || '' })),\n        participantResponses: new Map(),\n        expectedMemberCount: memberCount,\n        createdAt: new Date(),\n      });\n\n      // Start a timeout task that runs every second\n      const timeoutTask = setInterval(() => this.checkCallTimeout(callCid), 1000);\n\n      // Update the callState with the timeout task\n      const callState = this.callStates.get(callCid);\n      if (callState) {\n        callState.timer = timeoutTask;\n        this.callStates.set(callCid, callState);\n      }\n    }\n  };\n\n  private callRejectedCallback = (event: AllClientEvents['call.rejected']) => {\n    console.log('Call rejected', event);\n    if (event.user?.id) {\n      this.participantResponses.set(event.user.id, 'rejected');\n\n      // Update the combined callStates map\n      const callState = this.callStates.get(event.call_cid);\n      if (callState) {\n        callState.participantResponses.set(event.user.id, 'rejected');\n        this.callStates.set(event.call_cid, callState);\n      }\n\n      this.notifyListeners('callEvent', {\n        callId: event.call_cid,\n        state: 'rejected',\n        userId: event.user.id,\n      });\n\n      this.checkAllParticipantsResponded();\n    }\n  };\n\n  private callAcceptedCallback = (event: AllClientEvents['call.accepted']) => {\n    console.log('Call accepted', event);\n    if (event.user?.id) {\n      this.participantResponses.set(event.user.id, 'accepted');\n\n      // Update the combined callStates map\n      const callState = this.callStates.get(event.call_cid);\n      if (callState) {\n        callState.participantResponses.set(event.user.id, 'accepted');\n\n        // If someone accepted, clear the timer as we don't need to check anymore\n        if (callState.timer) {\n          clearInterval(callState.timer);\n          callState.timer = undefined;\n        }\n\n        this.callStates.set(event.call_cid, callState);\n      }\n\n      this.notifyListeners('callEvent', {\n        callId: event.call_cid,\n        state: 'accepted',\n        userId: event.user.id,\n      });\n    }\n  };\n\n  private callMissedCallback = (event: AllClientEvents['call.missed']) => {\n    console.log('Call missed', event);\n    if (event.user?.id) {\n      this.participantResponses.set(event.user.id, 'missed');\n\n      // Update the combined callStates map\n      const callState = this.callStates.get(event.call_cid);\n      if (callState) {\n        callState.participantResponses.set(event.user.id, 'missed');\n        this.callStates.set(event.call_cid, callState);\n      }\n\n      this.notifyListeners('callEvent', {\n        callId: event.call_cid,\n        state: 'missed',\n        userId: event.user.id,\n      });\n\n      this.checkAllParticipantsResponded();\n    }\n  };\n\n  // Add a combined map for call states, mirroring the iOS implementation\n  private callStates: Map<\n    string,\n    {\n      members: { user_id: string }[];\n      participantResponses: Map<string, string>;\n      expectedMemberCount: number;\n      createdAt: Date;\n      timer?: ReturnType<typeof setInterval>;\n    }\n  > = new Map();\n\n  private checkCallTimeout(callCid: string) {\n    const callState = this.callStates.get(callCid);\n    if (!callState) return;\n\n    // Calculate time elapsed since call creation\n    const now = new Date();\n    const elapsedSeconds = (now.getTime() - callState.createdAt.getTime()) / 1000;\n\n    // Check if 30 seconds have passed\n    if (elapsedSeconds >= 30) {\n      console.log(`Call ${callCid} has timed out after ${elapsedSeconds} seconds`);\n\n      // Check if anyone has accepted\n      const hasAccepted = Array.from(callState.participantResponses.values()).some(\n        (response) => response === 'accepted',\n      );\n\n      if (!hasAccepted) {\n        console.log(`No one accepted call ${callCid}, marking all non-responders as missed`);\n\n        // Mark all members who haven't responded as \"missed\"\n        callState.members.forEach((member) => {\n          if (!callState.participantResponses.has(member.user_id)) {\n            callState.participantResponses.set(member.user_id, 'missed');\n            this.participantResponses.set(member.user_id, 'missed');\n\n            this.notifyListeners('callEvent', {\n              callId: callCid,\n              state: 'missed',\n              userId: member.user_id,\n            });\n          }\n        });\n\n        // End the call\n        if (this.currentCall && this.currentCall.cid === callCid) {\n          this.currentCall.leave();\n        }\n\n        // Clear the timeout task\n        if (callState.timer) {\n          clearInterval(callState.timer);\n          callState.timer = undefined;\n        }\n\n        // Remove from callStates\n        this.callStates.delete(callCid);\n\n        // Clean up\n        this.cleanupCall();\n\n        // Notify that the call has ended\n        this.notifyListeners('callEvent', {\n          callId: callCid,\n          state: 'ended',\n          reason: 'timeout',\n        });\n      }\n    }\n  }\n\n  private checkAllParticipantsResponded() {\n    if (!this.currentCall) return;\n\n    const callCid = this.currentCall.cid;\n    const totalParticipants = this.callMembersExpected.get(callCid);\n\n    if (!totalParticipants) {\n      console.log(`No expected participant count found for call: ${callCid}`);\n      return;\n    }\n\n    console.log(`Total expected participants: ${totalParticipants}`);\n\n    // Count rejections and misses\n    let rejectedOrMissedCount = 0;\n    this.participantResponses.forEach((response) => {\n      if (response === 'rejected' || response === 'missed') {\n        rejectedOrMissedCount++;\n      }\n    });\n\n    console.log(`Participants responded: ${this.participantResponses.size}/${totalParticipants}`);\n    console.log(`Rejected or missed: ${rejectedOrMissedCount}`);\n\n    const allResponded = this.participantResponses.size >= totalParticipants;\n    const allRejectedOrMissed =\n      allResponded &&\n      Array.from(this.participantResponses.values()).every(\n        (response) => response === 'rejected' || response === 'missed',\n      );\n\n    // If all participants have rejected or missed the call\n    if (allResponded && allRejectedOrMissed) {\n      console.log('All participants have rejected or missed the call');\n\n      // End the call\n      this.currentCall.leave();\n\n      // Clean up the timer if exists in callStates\n      const callState = this.callStates.get(callCid);\n      if (callState?.timer) {\n        clearInterval(callState.timer);\n      }\n\n      // Remove from callStates\n      this.callStates.delete(callCid);\n\n      // Clear the responses\n      this.participantResponses.clear();\n\n      // Clean up\n      this.cleanupCall();\n\n      // Notify that the call has ended\n      this.notifyListeners('callEvent', {\n        callId: callCid,\n        state: 'ended',\n        reason: 'all_rejected_or_missed',\n      });\n    }\n  }\n\n  private cleanupCall() {\n    // First cleanup the call listeners\n    if (this.currentCall) {\n      if (this.participantJoinedListener) {\n        this.currentCall.off('participantJoined', this.participantJoinedListener);\n        this.participantJoinedListener = undefined;\n      }\n      if (this.participantLeftListener) {\n        this.currentCall.off('participantLeft', this.participantLeftListener);\n        this.participantLeftListener = undefined;\n      }\n      this.callStateSubscription?.unsubscribe();\n    }\n\n    if (this.magicDivId) {\n      const magicDiv = document.getElementById(this.magicDivId);\n      if (magicDiv) {\n        // Remove all video elements\n        const videoElements = magicDiv.querySelectorAll('video');\n        videoElements.forEach((video) => {\n          const id = video.id;\n          const unbind = this.videoBindings.get(id);\n          if (unbind) {\n            unbind();\n            this.videoBindings.delete(id);\n          }\n          // Stop all tracks\n          const tracks = (video as HTMLVideoElement).srcObject as MediaStream;\n          if (tracks) {\n            tracks.getTracks().forEach((track) => {\n              track.stop();\n              track.enabled = false;\n            });\n            video.srcObject = null;\n          }\n          video.remove();\n        });\n\n        // Remove all audio elements\n        const audioElements = magicDiv.querySelectorAll('audio');\n        audioElements.forEach((audio) => {\n          const id = audio.id;\n          const unbind = this.audioBindings.get(id);\n          if (unbind) {\n            unbind();\n            this.audioBindings.delete(id);\n          }\n          // Stop all tracks\n          const tracks = (audio as HTMLAudioElement).srcObject as MediaStream;\n          if (tracks) {\n            tracks.getTracks().forEach((track) => {\n              track.stop();\n              track.enabled = false;\n            });\n            audio.srcObject = null;\n          }\n          audio.remove();\n        });\n\n        // Clear the container\n        while (magicDiv.firstChild) {\n          magicDiv.removeChild(magicDiv.firstChild);\n        }\n      }\n    }\n\n    // Clear all bindings\n    this.videoBindings.clear();\n    this.audioBindings.clear();\n\n    // Clear call references\n    this.currentCall = undefined;\n    this.incomingCall = undefined;\n  }\n\n  async login(options: LoginOptions): Promise<SuccessResponse> {\n    this.client = StreamVideoClient.getOrCreateInstance({\n      apiKey: options.apiKey,\n      user: { id: options.userId, name: options.name, image: options.imageURL },\n      token: options.token,\n    });\n\n    // Store current user data\n    this.currentUser = {\n      userId: options.userId,\n      name: options.name,\n      imageURL: options.imageURL,\n    };\n\n    this.magicDivId = options.magicDivId;\n    this.setupCallRingListener();\n\n    return { success: true };\n  }\n\n  async logout(): Promise<SuccessResponse> {\n    if (!this.client) {\n      console.log('No client', this.client);\n      throw new Error('Client not initialized');\n    }\n\n    // Cleanup subscription\n    this.callStateSubscription?.unsubscribe();\n    this.callStateSubscription = undefined;\n\n    await this.client.disconnectUser();\n    this.client = undefined;\n    this.currentUser = undefined;\n    this.currentCall = undefined;\n    return { success: true };\n  }\n\n  async call(options: CallOptions): Promise<SuccessResponse> {\n    if (!this.client) {\n      console.log('No client', this.client);\n      throw new Error('Client not initialized - Please login first');\n    }\n\n    const call = this.client.call(options.type || 'default', crypto.randomUUID());\n    const members = options.userIds.map((userId) => ({ user_id: userId }));\n    if (this.client.streamClient.userID && !options.userIds.includes(this.client.streamClient.userID)) {\n      members.push({ user_id: this.client.streamClient.userID });\n    }\n    await call.getOrCreate({ data: { members, team: options.team } });\n\n    // Store the expected member count for this call\n    // -1, because we don't count the caller themselves\n    this.callMembersExpected.set(call.cid, members.length);\n    console.log(`Setting expected members for call ${call.cid}: ${members.length}`);\n\n    this.currentCall = call;\n    if (options.ring) {\n      this.outgoingCall = call.cid;\n      await call.ring();\n    }\n\n    await call.join();\n    return { success: true };\n  }\n\n  async endCall(): Promise<SuccessResponse> {\n    if (!this.currentCall) {\n      console.log('No active call', this.currentCall);\n      throw new Error('No active call');\n    }\n\n    await this.currentCall.leave();\n    this.currentCall = undefined;\n    this.cleanupCall();\n\n    return { success: true };\n  }\n\n  async setMicrophoneEnabled(options: { enabled: boolean }): Promise<SuccessResponse> {\n    if (!this.currentCall) {\n      console.log('No active call', this.currentCall);\n      throw new Error('No active call');\n    }\n\n    if (options.enabled) {\n      await this.currentCall.microphone.enable();\n    } else {\n      await this.currentCall.microphone.disable();\n    }\n\n    return { success: true };\n  }\n\n  async setCameraEnabled(options: { enabled: boolean }): Promise<SuccessResponse> {\n    if (!this.currentCall) {\n      console.log('No active call', this.currentCall);\n      throw new Error('No active call');\n    }\n\n    if (options.enabled) {\n      await this.currentCall.camera.enable();\n    } else {\n      await this.currentCall.camera.disable();\n    }\n\n    return { success: true };\n  }\n\n  async setSpeaker(options: { name: string }): Promise<SuccessResponse> {\n    if (!this.currentCall) {\n      console.log('No active call', this.currentCall);\n      throw new Error('No active call');\n    }\n\n    await this.currentCall.speaker.select(options.name);\n\n    return { success: true };\n  }\n\n  async switchCamera(options: { camera: 'front' | 'back' }): Promise<SuccessResponse> {\n    if (!this.currentCall) {\n      console.log('No active call', this.currentCall);\n      throw new Error('No active call');\n    }\n\n    if (options.camera === 'front') {\n      await this.currentCall.camera.selectDirection('front');\n    } else {\n      await this.currentCall.camera.selectDirection('back');\n    }\n\n    return { success: true };\n  }\n\n  async acceptCall(): Promise<SuccessResponse> {\n    if (!this.incomingCall || !this.client) {\n      console.log('No incoming call to accept', this.incomingCall, this.client);\n      throw new Error('No incoming call to accept');\n    }\n    console.log('Accepting call', this.incomingCall);\n    const call = this.client.call(this.incomingCall.type, this.incomingCall.id);\n    this.currentCall = call;\n    console.log('Joining call', call);\n    await call.accept();\n    await call.join();\n    console.log('Joined call', call);\n    this.notifyListeners('callEvent', { callId: call.id, state: CallingState.JOINED });\n    this.setupParticipantListener();\n    return { success: true };\n  }\n\n  async rejectCall(): Promise<SuccessResponse> {\n    if (!this.incomingCall || !this.client) {\n      console.log('No incoming call to reject', this.incomingCall, this.client);\n      throw new Error('No incoming call to reject');\n    }\n    console.log('Rejecting call', this.incomingCall);\n    const call: Call = this.client.call(this.incomingCall.type, this.incomingCall.id);\n    console.log('Leaving call', call);\n    await call.reject();\n    this.incomingCall = undefined;\n    console.log('Rejected call', call);\n    this.notifyListeners('callEvent', { callId: call.id, state: CallingState.LEFT });\n    this.cleanupCall();\n    return { success: true };\n  }\n\n  async isCameraEnabled(): Promise<CameraEnabledResponse> {\n    if (!this.currentCall) {\n      console.log('No active call', this.currentCall);\n      throw new Error('No active call');\n    }\n    const enabled = await this.currentCall.camera.enabled;\n    return { enabled };\n  }\n\n  async getCallInfo(options: { callId: string }): Promise<CallEvent> {\n    if (!this.currentCall) {\n      throw new Error('No active call');\n    }\n\n    if (this.currentCall.id !== options.callId) {\n      throw new Error('Call ID does not match active call');\n    }\n\n    const callingState = this.currentCall.state.callingState;\n    let state: CallState;\n\n    switch (callingState) {\n      case CallingState.IDLE:\n        state = 'idle';\n        break;\n      case CallingState.RINGING:\n        state = 'ringing';\n        break;\n      case CallingState.JOINING:\n        state = 'joining';\n        break;\n      case CallingState.RECONNECTING:\n        state = 'reconnecting';\n        break;\n      case CallingState.JOINED:\n        state = 'joined';\n        break;\n      case CallingState.LEFT:\n        state = 'left';\n        break;\n      default:\n        state = 'unknown';\n    }\n\n    // Try to get caller information from the call\n    let caller: CallMember | undefined;\n    let members: CallMember[] = [];\n\n    try {\n      // Get call details\n      const callDetails = await this.currentCall.get();\n\n      if (callDetails?.call?.created_by) {\n        caller = {\n          userId: callDetails.call.created_by.id,\n          name: callDetails.call.created_by.name,\n          imageURL: callDetails.call.created_by.image,\n          role: callDetails.call.created_by.role,\n        };\n      }\n\n      // Get current participants\n      if (this.currentCall.state.participants) {\n        members = this.currentCall.state.participants.map((participant: StreamVideoParticipant) => ({\n          userId: participant.userId,\n          name: participant.name,\n          imageURL: participant.image,\n          role: participant.roles?.[0],\n        }));\n      }\n    } catch (error) {\n      console.warn('Failed to get call details:', error);\n    }\n\n    return {\n      callId: this.currentCall.id,\n      state,\n      caller,\n      members,\n    };\n  }\n\n  async getCallStatus(): Promise<CallEvent> {\n    if (!this.currentCall) {\n      throw new Error('No active call');\n    }\n\n    const callingState = this.currentCall.state.callingState;\n    let state: CallState;\n\n    switch (callingState) {\n      case CallingState.IDLE:\n        state = 'idle';\n        break;\n      case CallingState.RINGING:\n        state = 'ringing';\n        break;\n      case CallingState.JOINING:\n        state = 'joining';\n        break;\n      case CallingState.RECONNECTING:\n        state = 'reconnecting';\n        break;\n      case CallingState.JOINED:\n        state = 'joined';\n        break;\n      case CallingState.LEFT:\n        state = 'left';\n        break;\n      default:\n        state = 'unknown';\n    }\n\n    return {\n      callId: this.currentCall.id,\n      state,\n    };\n  }\n\n  async setDynamicStreamVideoApikey(_options: { apiKey: string }): Promise<SuccessResponse> {\n    throw new Error('setDynamicStreamVideoApikey is not implemented on web platform');\n  }\n\n  async getDynamicStreamVideoApikey(): Promise<DynamicApiKeyResponse> {\n    throw new Error('getDynamicStreamVideoApikey is not implemented on web platform');\n  }\n\n  async getCurrentUser(): Promise<CurrentUserResponse> {\n    if (this.currentUser && this.client) {\n      return {\n        userId: this.currentUser.userId,\n        name: this.currentUser.name,\n        imageURL: this.currentUser.imageURL || '',\n        isLoggedIn: true,\n      };\n    } else {\n      return {\n        userId: '',\n        name: '',\n        imageURL: '',\n        isLoggedIn: false,\n      };\n    }\n  }\n}\n"]}