name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  verify-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2 
        with:
          bun-version: latest

      - name: Setup Java for Android
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/.gradle/caches
          key: ${{ runner.os }}-deps-android-${{ hashFiles('**/package-lock.json', '**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-deps-android-

      - name: Install dependencies
        run: bun install

      - name: Verify Android
        run: cd android && ./gradlew clean build test && cd ..
        env:
          JAVA_HOME: ${{ env.JAVA_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}

  verify-ios:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2 
        with:
          bun-version: latest

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-deps-ios-${{ hashFiles('**/package-lock.json', '**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-deps-ios-

      - name: Install dependencies
        run: bun install

      - name: Verify iOS
        run: xcodebuild -scheme StreamCall -destination generic/platform=iOS

  deploy:
    needs: [verify-android, verify-ios]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2 
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-deps-deploy-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-deploy-

      - name: Install dependencies
        run: bun install

      - name: Update version if provided
        if: github.event_name == 'workflow_dispatch' && inputs.version != ''
        run: |
          # Configure git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          # Update version in package.json
          jq '.version = "${{ github.event.inputs.version }}"' package.json > package.json.tmp
          mv package.json.tmp package.json
          
          # Commit and push the changes
          git add package.json
          git commit -m "chore: bump version to ${{ github.event.inputs.version }}"
          git tag "v${{ github.event.inputs.version }}"
          git push origin main
          git push origin "v${{ github.event.inputs.version }}"

      - name: Verify Web
        run: bun run verify:web

      - name: Build package
        run: bun run build

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 